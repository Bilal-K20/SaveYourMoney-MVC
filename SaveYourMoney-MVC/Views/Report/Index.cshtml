@model SaveYourMoney_MVC.ViewModels.FinancialReportViewModel

<h1>Financial Report</h1>

<h2>Total Income: @Model.TotalIncome</h2>
<h2>Total Expenditure: @Model.TotalExpenditure</h2>
<h2>Net: @Model.NetValue</h2>

@if (Model.CategorySummaries.Any())
{
    <h3>Category Summaries</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Category</th>
                <th>Total Amount</th>
                <th>Budget</th>
                <th>Over Budget</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var summary in Model.CategorySummaries)
            {
                <tr>
                    <td>@summary.CategoryName</td>
                    <td>@summary.TotalAmount</td>
                    <td>@summary.Budget</td>
                    <td>@summary.IsOverBudget</td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Time Frame Selector -->
    <div>
        <label for="timeFrame">Select Time Frame:</label>
        <select id="timeFrame">
            <option value="1">Last 1 year</option>
            <option value="2">Last 2 years</option>
            <option value="3">Last 3 years</option>
            <option value="4">Last 4 years</option>
            <option value="5">Last 5 years</option>
            <option value="-1">Next 1 year</option>
            <option value="-2">Next 2 years</option>
            <option value="-3">Next 3 years</option>
            <option value="-4">Next 4 years</option>
            <option value="-5">Next 5 years</option>
        </select>
        <button onclick="updateReport()">Update</button>
    </div>

    <!-- Charts -->
    <div>
        <canvas id="categoryChart" width="800" height="400"></canvas>
        <canvas id="categoryPieChart" width="800" height="400"></canvas>
    </div>

    @section Scripts {
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script>
            // Function to update the financial report based on selected time frame
            function updateReport() {
                var timeFrame = document.getElementById('timeFrame').value;
                var url = '@Url.Action("Index", "Report")' + '?timeFrame=' + timeFrame;
                window.location.href = url;
            }

            var categoryNames = [];
            var categoryAmounts = [];
            var categoryBudgets = [];

            @foreach (var summary in Model.CategorySummaries)
            {
                <text>categoryNames.push('@summary.CategoryName');</text>
                <text>categoryAmounts.push(@summary.TotalAmount);</text>
                <text>categoryBudgets.push(@summary.Budget);</text>
            }

            var ctx = document.getElementById('categoryChart').getContext('2d');
            var chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: categoryNames,
                    datasets: [{
                        label: 'Total Amount',
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 1,
                        data: categoryAmounts
                    },
                    {
                        label: 'Budget',
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1,
                        data: categoryBudgets
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            var pieCtx = document.getElementById('categoryPieChart').getContext('2d');
            var pieChart = new Chart(pieCtx, {
                type: 'pie',
                data: {
                    labels: categoryNames,
                    datasets: [{
                        label: 'Total Amount',
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1,
                        data: categoryAmounts
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        </script>
    }
}
}
else
{
<div>
    <p>No expenses found. Please create expenses to view analytics.</p>
</div>
}
