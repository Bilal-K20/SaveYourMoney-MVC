@model SaveYourMoney_MVC.ViewModels.ExpenseViewModel

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Expense Management</title>
    <!-- Include Bootstrap CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.3/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <h1 class="mb-4">Expense Management</h1>

        <div class="row mb-3">
            <div class="col-auto">
                <label for="datePicker" class="form-label">Select Date:</label>
                <input type="date" id="datePicker" class="form-control">
            </div>
            <div class="col-auto">
                <label for="typeFilter" class="form-label">Filter by Type:</label>
                <select id="typeFilter" class="form-select">
                    <option value="">All</option>
                    <option value="Income">Income</option>
                    <option value="Expense">Expense</option>
                </select>
            </div>
            <div class="col-auto">
                <label for="yearFilter" class="form-label">Filter by Year:</label>
                <input type="number" id="yearFilter" class="form-control" min="0" max="9999" placeholder="Year">
                <div id="yearError" class="invalid-feedback"></div>
            </div>
            <div class="col-auto">
                <label for="monthFilter" class="form-label">Filter by Month:</label>
                <select id="monthFilter" class="form-select">
                    <option value="">All</option>
                    @foreach (var month in Model.Months)
                    {
                        <option value="@month">@month</option>
                    }
                </select>
            </div>
            <div class="col-auto">
                <button id="filterButton" class="btn btn-primary mt-4">Filter</button>
            </div>
            <div class="col-auto">
                @if (Model.Expenses != null || Model.Expenses.Count() > 0)
                {
                    <button asp-controller="Expense" asp-action="AddExpense" class="btn btn-success mb-4" id="addExpenseButton" data-bs-toggle="modal" data-bs-target="#addExpenseModal" data-url="@Url.Action("AddExpense", "Expense")">Add an Expense</button>

                }
            </div>
        </div>

        <div id="expenseTable">
            <!-- Expense table will be loaded here -->
            @Html.Partial("_ExpenseTablePartial", Model)
        </div>
    </div>

    <!-- Add Expense Modal -->
    <div class="modal fade" id="addExpenseModal" tabindex="-1" aria-labelledby="addExpenseModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addExpenseModalLabel">Add New Expense</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="addExpenseModalBody">
                    <!-- Content will be loaded dynamically here -->
                </div>
            </div>
        </div>
    </div>


    <!-- Edit Expense Modal -->
    <div class="modal fade" id="editExpenseModal" tabindex="-1" aria-labelledby="editExpenseModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editExpenseModalLabel">Edit Expense</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="editExpenseModalBody">
                    <!-- Content for editing expense form will be loaded dynamically here -->
                </div>
            </div>
        </div>
    </div>




    <!-- Include Bootstrap JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.3/js/bootstrap.bundle.min.js"></script>
    <!-- Include jQuery -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            // Filter expenses as the user types
            $('#datePicker, #typeFilter, #yearFilter, #monthFilter').on('change keyup', function () {
                filterExpenses();
            });

            // Add Expense Modal
            $('#addExpenseModal').on('show.bs.modal', function (event) {
                var modal = $(this);
                var url = '@Url.Action("AddExpense", "Expense")';
                modal.find('.modal-body').load(url);
            });

            // Event listener for opening edit expense modal
            $('#editExpenseModal').on('show.bs.modal', function(event) {
                var button = $(event.relatedTarget); // Button that triggered the modal
                var expenseId = button.data('expense-id'); // Extract info from data-* attributes

                console.log('Expense ID:', expenseId); // Debugging

                // AJAX request to fetch expense details by ID
                $.ajax({
                    url: '@Url.Action("EditExpense", "Expense")',
                    type: 'GET',
                    data: { expenseId: expenseId },
                    success: function(response) {
                        // Populate form fields in the edit expense modal with fetched data
                        $('#editExpenseModalBody').html(response);
                    },
                    error: function(xhr, status, error) {
                        // Handle error
                        console.error('Error fetching expense details:', error);
                    }
                });
            });

            // Event listener for save changes button click
            $('#editExpenseModal').on('click', '#saveChangesBtn', function() {
                var formData = $('#editExpenseForm').serialize();

                // AJAX request to send updated expense details to the server
                $.ajax({
                    url: '@Url.Action("EditExpense", "Expense")',
                    type: 'POST',
                    data: formData,
                    success: function(response) {
                        // Handle success (e.g., display success message, update table)
                        $('#editExpenseModal').modal('hide'); // Close modal after successful update
                    },
                    error: function(xhr, status, error) {
                        // Handle error
                        console.error('Error updating expense:', error);
                    }
                });
            });
        });

        function filterExpenses() {
            var date = $('#datePicker').val();
            var type = $('#typeFilter').val();
            var year = $('#yearFilter').val();
            var month = $('#monthFilter').val();

            // Validate year
            if (year !== "" && !validateYear(year)) {
                $('#yearFilter').addClass('is-invalid');
                $('#yearError').text('sorry I can only get data upto 50 years ago');
                return;
            } else {
                $('#yearFilter').removeClass('is-invalid');
                $('#yearError').text('');
            }

            $.ajax({
                url: '@Url.Action("FilterExpenses", "Expense")',
                type: 'GET',
                data: { date: date, type: type, year: year, month: month },
                success: function (result) {
                    $('#expenseTable').html(result);
                }
            });
        }

        function validateYear(year) {
            var currentYear = new Date().getFullYear();
            var inputYear = parseInt(year);

            if (inputYear < 0 || inputYear < currentYear - 50) {
                return false;
            }
            return true;
        }
    </script>

</body>
</html>
