@model SignUpViewModel
@{
    ViewData["Title"] = "Sign Up";
}

<!DOCTYPE html>
<html>
<head>
    <title>Sign Up</title>
    <style>
        /* Add styles specific to the signup form */
        .signup-container {
            margin-top: 50px;
            padding: 20px;
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 5px;
        }

            .signup-container h2 {
                margin-bottom: 20px;
            }

            .signup-container form {
                max-width: 500px;
                margin: 0 auto;
            }

            .signup-container .form-group {
                margin-bottom: 20px;
            }

            .signup-container label {
                display: block;
                font-weight: bold;
            }

            .signup-container input[type="text"],
            .signup-container input[type="email"],
            .signup-container input[type="password"] {
                width: 100%;
                padding: 10px;
                border: 1px solid #ced4da;
                border-radius: 5px;
            }

            .signup-container button {
                display: block;
                width: 100%;
                padding: 10px;
                border: none;
                border-radius: 5px;
                background-color: #007bff;
                color: #fff;
                cursor: pointer;
            }

                .signup-container button:hover {
                    background-color: #0056b3;
                }

        .signup-page {
            padding-top: 50px;
            background-color: #f8f9fa;
        }

        .signup-container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #dee2e6;
            border-radius: 5px;
            background-color: #fff;
        }

        .error {
            color: red;
            font-size: 12px;
            margin-top: 5px;
        }
    </style>
</head>
<body>

    <div class="signup-page">
        <div class="signup-container">
            <h2>Sign Up</h2>
            <form id="signUpForm" asp-action="SignUp">
                <div class="form-group">
                    <label for="firstname">First Name</label>
                    <input asp-for="FirstName" placeholder="Enter your first name" type="text" id="firstname" name="firstname" required>
                    <div id="firstname-error" class="error"></div>
                </div>
                <div class="form-group">
                    <label for="lastname">Last Name</label>
                    <input asp-for="LastName" placeholder="Enter your last name" type="text" id="lastname" name="lastname" required>
                    <div id="lastname-error" class="error"></div>
                </div>
                <div class="form-group">
                    <label for="username">Username</label>
                    <input asp-for="Username" type="text" placeholder="Create a username" id="username" name="username" required>
                    <div id="username-error" class="error"></div>
                </div>
                <div class="form-group">
                    <label for="email">Email</label>
                    <input asp-for="Email" type="email" id="email" placeholder="Enter your email" name="email" required>
                    <div id="email-error" class="error"></div>
                </div>
                <div class="form-group">
                    <label for="password">Password</label>
                    <input asp-for="Password" type="password" id="password" placeholder="Enter your secure password" name="password" required>
                    <div id="password-error" class="error"></div>
                </div>
                <div class="form-group">
                    <label for="ConfirmPassword">Confirm Password</label>
                    <input asp-for="ConfirmPassword" type="password" id="ConfirmPassword" placeholder="Retype your password" name="ConfirmPassword" required>
                    <div id="confirm-password-error" class="error"></div>
                </div>
                <button id="signUpButton" type="submit">Sign Up</button>
            </form>
        </div>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
    $(document).ready(function () {
        // Attach event listeners for real-time validation
        $('#firstname').on('input', validateFirstName);
        $('#lastname').on('input', validateLastName);
        $('#username').on('input', validateUsername);
        $('#email').on('input', validateEmail);
        $('#password').on('input', validatePassword);
        $('#ConfirmPassword').on('input', validateConfirmPassword);

        // Attach form submission event listener
        $('#signUpForm').submit(function (event) {
            // Prevent form submission
            event.preventDefault();

            // Perform client-side validation
            var errors = validateSignUpForm();

            if (errors.length > 0) {
                // Display validation errors
                alert("Please correct the following errors:\n" + errors.join("\n"));
                return;
            }

            // If validation passes, submit the form
            this.submit();
        });

        // Function to validate email format
        function isValidEmail(email) {
            return /^[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(email);
        }

        // Function to validate username format and length
        function isValidUsername(username) {
            if (!/^[a-zA-Z0-9_]+$/.test(username)) {
                return "Username can only contain letters, numbers, and underscores.";
            }
            if (username.length < 3) {
                return "Username must be at least 3 characters long.";
            }
            return true;
        }

        // Function to validate password strength
        function isValidPassword(password) {
            if (password.length < 8) {
                return "Password must be at least 8 characters long.";
            }
            if (!/[^a-zA-Z0-9]/.test(password)) {
                return "Password must contain at least one special character.";
            }
            return true;
        }

        // Function to validate first name
        function validateFirstName() {
            var firstName = $('#firstname').val();
            if (firstName.length < 3 || !/^[a-zA-Z]+$/.test(firstName)) {
                $('#firstname').css('border-color', 'red');
                $('#firstname-error').text("First name is invalid. It should contain only letters and be at least 3 characters long.");
            } else {
                $('#firstname').css('border-color', '');
                $('#firstname-error').text('');
            }
        }

        // Function to validate last name
        function validateLastName() {
            var lastName = $('#lastname').val();
            if (lastName.length < 3 || !/^[a-zA-Z]+$/.test(lastName)) {
                $('#lastname').css('border-color', 'red');
                $('#lastname-error').text("Last name is invalid. It should contain only letters and be at least 3 characters long.");
            } else {
                $('#lastname').css('border-color', '');
                $('#lastname-error').text('');
            }
        }

        // Function to validate username
        function validateUsername() {
            var username = $('#username').val();
            var validationResult = isValidUsername(username);
            if (validationResult !== true) {
                $('#username').css('border-color', 'red');
                $('#username-error').text(validationResult);
            } else {
                $('#username').css('border-color', '');
                $('#username-error').text('');
            }
        }

        // Function to validate email
        function validateEmail() {
            var email = $('#email').val();
            if (!isValidEmail(email)) {
                $('#email').css('border-color', 'red');
                $('#email-error').text("Email is invalid. Please enter a valid email address.");
            } else {
                $('#email').css('border-color', '');
                $('#email-error').text('');
            }
        }

        // Function to validate password
        function validatePassword() {
            var password = $('#password').val();
            var validationResult = isValidPassword(password);
            if (validationResult !== true) {
                $('#password').css('border-color', 'red');
                $('#password-error').text(validationResult);
            } else {
                $('#password').css('border-color', '');
                $('#password-error').text('');
            }
        }

        // Function to validate confirm password
        function validateConfirmPassword() {
            var password = $('#password').val();
            var confirmPassword = $('#ConfirmPassword').val();
            if (password !== confirmPassword) {
                $('#ConfirmPassword').css('border-color', 'red');
                $('#confirm-password-error').text("Passwords do not match.");
            } else {
                $('#ConfirmPassword').css('border-color', '');
                $('#confirm-password-error').text('');
            }
        }

        // Function to validate form inputs
        function validateSignUpForm() {
            var errors = [];
            validateFirstName();
            validateLastName();
            validateUsername();
            validateEmail();
            validatePassword();
            validateConfirmPassword();

            // Check if any input fields have red borders
            $('#signUpForm input').each(function () {
                if ($(this).css('border-color') === 'rgb(255, 0, 0)') {
                    errors.push($(this).prev('label').text() + " is invalid.");
                }
            });

            return errors;
        }
    });
    </script>

</body>
</html>
